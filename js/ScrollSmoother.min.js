function Ve(h, a) {
    for (var u = 0; u < a.length; u++) {
        var b = a[u];
        (b.enumerable = b.enumerable || !1), (b.configurable = !0), "value" in b && (b.writable = !0), Object.defineProperty(h, b.key, b);
    }
}
function Xe(h, a, u) {
    return a && Ve(h.prototype, a), u && Ve(h, u), h;
}
var c,
    fe,
    w,
    G,
    re,
    F,
    B,
    Be,
    o,
    I,
    he,
    De,
    He,
    Le,
    Ue,
    Ye = function () {
        return typeof window < "u";
    },
    je = function () {
        return c || (Ye() && (c = window.gsap) && c.registerPlugin && c);
    },
    Ze = function (a) {
        return Math.round(a * 1e5) / 1e5 || 0;
    },
    M = function (a) {
        return o.maxScroll(a || w);
    },
    $e = function (a, u) {
        var b = a.parentNode || re,
            K = a.getBoundingClientRect(),
            O = b.getBoundingClientRect(),
            W = O.top - K.top,
            D = O.bottom - K.bottom,
            N = (Math.abs(W) > Math.abs(D) ? W : D) / (1 - u),
            H = -N * u,
            L,
            d;
        return N > 0 && ((L = O.height / (w.innerHeight + O.height)), (d = L === 0.5 ? O.height * 2 : Math.min(O.height, Math.abs((-N * L) / (2 * L - 1))) * 2 * (u || 1)), (H += u ? -d * u : -d / 2), (N += d)), { change: N, offset: H };
    },
    et = function (a) {
        var u = G.querySelector(".ScrollSmoother-wrapper");
        return u || ((u = G.createElement("div")), u.classList.add("ScrollSmoother-wrapper"), a.parentNode.insertBefore(u, a), u.appendChild(a)), u;
    },
    ne = (function () {
        function h(a) {
            var u = this;
            fe || h.register(c) || console.warn("Please gsap.registerPlugin(ScrollSmoother)"), (a = this.vars = a || {}), I && I.kill(), (I = this), Le(this);
            var b = a,
                K = b.smoothTouch,
                O = b.onUpdate,
                W = b.onStop,
                D = b.smooth,
                N = b.onFocusIn,
                H = b.normalizeScroll,
                L = b.wholePixels,
                d,
                y,
                de,
                g,
                p,
                U,
                we,
                Te,
                xe,
                P,
                J,
                Ee,
                pe,
                qe = this,
                ie = a.effectsPrefix || "",
                oe = o.getScrollFunc(w),
                k = o.isTouch === 1 ? (K === !0 ? 0.8 : parseFloat(K) || 0) : D === 0 || D === !1 ? 0 : parseFloat(D) || 0.8,
                A = (k && +a.speed) || 1,
                T = 0,
                ge = 0,
                Q = 1,
                X = De(0),
                Ce = function () {
                    return X.update(-T);
                },
                V = { y: 0 },
                Re = function () {
                    return (d.style.overflow = "visible");
                },
                me,
                ae = function (e) {
                    e.update();
                    var r = e.getTween();
                    r && (r.pause(), (r._time = r._dur), (r._tTime = r._tDur)), (me = !1), e.animation.progress(e.progress, !0);
                },
                se = function (e, r) {
                    ((e !== T && !P) || r) && (L && (e = Math.round(e)), k && ((d.style.transform = "matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, " + e + ", 0, 1)"), (d._gsap.y = e + "px")), (ge = e - T), (T = e), o.isUpdating || h.isRefreshing || o.update());
                },
                Z = function (e) {
                    return arguments.length ? (e < 0 && (e = 0), (V.y = -e), (me = !0), P ? (T = -e) : se(-e), o.isRefreshing ? g.update() : oe(e / A), this) : -T;
                },
                le =
                    typeof ResizeObserver < "u" &&
                    a.autoResize !== !1 &&
                    new ResizeObserver(function () {
                        if (!o.isRefreshing) {
                            var t = M(y) * A;
                            t < -T && Z(t), Ue.restart(!0);
                        }
                    }),
                Pe,
                ke = function (e) {
                    (y.scrollTop = 0), !((e.target.contains && e.target.contains(y)) || (N && N(u, e) === !1)) && (o.isInViewport(e.target) || e.target === Pe || u.scrollTo(e.target, !1, "center center"), (Pe = e.target));
                },
                Ae = function (e, r) {
                    if (e < r.start) return e;
                    var n = isNaN(r.ratio) ? 1 : r.ratio,
                        s = r.end - r.start,
                        l = e - r.start,
                        m = r.offset || 0,
                        C = r.pins || [],
                        v = C.offset || 0,
                        x = (r._startClamp && r.start <= 0) || (r.pins && r.pins.offset) ? 0 : r._endClamp && r.end === M() ? 1 : 0.5;
                    return (
                        C.forEach(function (_) {
                            (s -= _.distance), _.nativeStart <= e && (l -= _.distance);
                        }),
                        v && (l *= (s - v / n) / s),
                        e + (l - m * x) / n - l
                    );
                },
                Ge = function t(e, r, n) {
                    n || (e.pins.length = e.pins.offset = 0);
                    var s = e.pins,
                        l = e.markers,
                        m,
                        C,
                        v,
                        x,
                        _,
                        f,
                        E,
                        i;
                    for (E = 0; E < r.length; E++)
                        if (
                            ((i = r[E]),
                            e.trigger && i.trigger && e !== i && (i.trigger === e.trigger || i.pinnedContainer === e.trigger || e.trigger.contains(i.trigger)) && ((_ = i._startNative || i._startClamp || i.start), (f = i._endNative || i._endClamp || i.end), (v = Ae(_, e)), (x = i.pin && f > 0 ? v + (f - _) : Ae(f, e)), i.setPositions(v, x, !0, (i._startClamp ? Math.max(0, v) : v) - _), i.markerStart && l.push(c.quickSetter([i.markerStart, i.markerEnd], "y", "px")), i.pin && i.end > 0 && !n))
                        ) {
                            if (((m = i.end - i.start), (C = e._startClamp && i.start < 0), C)) {
                                if (e.start > 0) {
                                    e.setPositions(0, e.end + (e._startNative - e.start), !0), t(e, r);
                                    return;
                                }
                                (m += i.start), (s.offset = -i.start);
                            }
                            s.push({
                                start: i.start,
                                nativeStart: _,
                                end: i.end,
                                distance: m,
                                trig: i,
                            }),
                                e.setPositions(e.start, e.end + (C ? -i.start : m), !0);
                        }
                },
                ze = function (e, r) {
                    p.forEach(function (n) {
                        return Ge(n, e, r);
                    });
                },
                Fe = function () {
                    Re(),
                        requestAnimationFrame(Re),
                        p &&
                            (o.getAll().forEach(function (e) {
                                (e._startNative = e.start), (e._endNative = e.end);
                            }),
                            p.forEach(function (e) {
                                var r = e._startClamp || e.start,
                                    n = e.autoSpeed ? Math.min(M(), e.end) : r + Math.abs((e.end - r) / e.ratio),
                                    s = n - e.end;
                                if (((r -= s / 2), (n -= s / 2), r > n)) {
                                    var l = r;
                                    (r = n), (n = l);
                                }
                                e._startClamp && r < 0 ? ((n = e.ratio < 0 ? M() : e.end / e.ratio), (s = n - e.end), (r = 0)) : (e.ratio < 0 || (e._endClamp && n >= M())) && ((n = M()), (r = e.ratio < 0 || e.ratio > 1 ? 0 : n - (n - e.start) / e.ratio), (s = (n - r) * e.ratio - (e.end - e.start))), (e.offset = s || 1e-4), (e.pins.length = e.pins.offset = 0), e.setPositions(r, n, !0);
                            }),
                            ze(o.sort())),
                        X.reset();
                },
                ve = function () {
                    return o.addEventListener("refresh", Fe);
                },
                Ke = function () {
                    return (
                        p &&
                        p.forEach(function (e) {
                            return e.vars.onRefresh(e);
                        })
                    );
                },
                We = function () {
                    return (
                        p &&
                            p.forEach(function (e) {
                                return e.vars.onRefreshInit(e);
                            }),
                        Ke
                    );
                },
                Ie = function (e, r, n, s) {
                    return function () {
                        var l = typeof r == "function" ? r(n, s) : r;
                        l || l === 0 || (l = s.getAttribute("data-" + ie + e) || (e === "speed" ? 1 : 0)), s.setAttribute("data-" + ie + e, l);
                        var m = (l + "").substr(0, 6) === "clamp(";
                        return { clamp: m, value: m ? l.substr(6, l.length - 7) : l };
                    };
                },
                Je = function (e, r, n, s, l) {
                    l = (typeof l == "function" ? l(s, e) : l) || 0;
                    var m = Ie("speed", r, s, e),
                        C = Ie("lag", n, s, e),
                        v = c.getProperty(e, "y"),
                        x = e._gsap,
                        _,
                        f,
                        E,
                        i,
                        ye,
                        ce,
                        Y = [],
                        Ne = function () {
                            (r = m()), (n = parseFloat(C().value)), (_ = parseFloat(r.value) || 1), (E = r.value === "auto"), (ye = E || (f && f._startClamp && f.start <= 0) || Y.offset ? 0 : f && f._endClamp && f.end === M() ? 1 : 0.5), i && i.kill(), (i = n && c.to(e, { ease: he, overwrite: !1, y: "+=0", duration: n })), f && ((f.ratio = _), (f.autoSpeed = E));
                        },
                        _e = function () {
                            (x.y = v + "px"), x.renderTransform(1), Ne();
                        },
                        Se = [],
                        j = 0,
                        Me = function (S) {
                            if (E) {
                                _e();
                                var R = $e(e, Be(0, 1, -S.start / (S.end - S.start)));
                                (j = R.change), (ce = R.offset);
                            } else (ce = Y.offset || 0), (j = (S.end - S.start - ce) * (1 - _));
                            Y.forEach(function (ee) {
                                return (j -= ee.distance * (1 - _));
                            }),
                                (S.offset = j || 0.001),
                                S.vars.onUpdate(S),
                                i && i.progress(1);
                        };
                    return (
                        Ne(),
                        (_ !== 1 || E || i) &&
                            ((f = o.create({
                                trigger: E ? e.parentNode : e,
                                start: function () {
                                    return r.clamp ? "clamp(top bottom+=" + l + ")" : "top bottom+=" + l;
                                },
                                end: function () {
                                    return r.value < 0 ? "max" : r.clamp ? "clamp(bottom top-=" + l + ")" : "bottom top-=" + l;
                                },
                                scroller: y,
                                scrub: !0,
                                refreshPriority: -999,
                                onRefreshInit: _e,
                                onRefresh: Me,
                                onKill: function (S) {
                                    var R = p.indexOf(S);
                                    R >= 0 && p.splice(R, 1), _e();
                                },
                                onUpdate: function (S) {
                                    var R = v + j * (S.progress - ye),
                                        ee = Y.length,
                                        ue = 0,
                                        z,
                                        te,
                                        be;
                                    if (S.offset) {
                                        if (ee) {
                                            for (te = -T, be = S.end; ee--; ) {
                                                if (((z = Y[ee]), z.trig.isActive || (te >= z.start && te <= z.end))) {
                                                    i && ((z.trig.progress += z.trig.direction < 0 ? 0.001 : -0.001), z.trig.update(0, 0, 1), i.resetTo("y", parseFloat(x.y), -ge, !0), Q && i.progress(1));
                                                    return;
                                                }
                                                te > z.end && (ue += z.distance), (be -= z.distance);
                                            }
                                            R = v + ue + j * ((c.utils.clamp(S.start, S.end, te) - S.start - ue) / (be - S.start) - ye);
                                        }
                                        Se.length &&
                                            !E &&
                                            Se.forEach(function (Qe) {
                                                return Qe(R - ue);
                                            }),
                                            (R = Ze(R + ce)),
                                            i ? (i.resetTo("y", R, -ge, !0), Q && i.progress(1)) : ((x.y = R + "px"), x.renderTransform(1));
                                    }
                                },
                            })),
                            Me(f),
                            (c.core.getCache(f.trigger).stRevert = We),
                            (f.startY = v),
                            (f.pins = Y),
                            (f.markers = Se),
                            (f.ratio = _),
                            (f.autoSpeed = E),
                            (e.style.willChange = "transform")),
                        f
                    );
                };
            ve(),
                o.addEventListener("killAll", ve),
                c.delayedCall(0.5, function () {
                    return (Q = 0);
                }),
                (this.scrollTop = Z),
                (this.scrollTo = function (t, e, r) {
                    var n = c.utils.clamp(0, M(), isNaN(t) ? u.offset(t, r) : +t);
                    e
                        ? P
                            ? c.to(u, {
                                  duration: k,
                                  scrollTop: n,
                                  overwrite: "auto",
                                  ease: he,
                              })
                            : oe(n)
                        : Z(n);
                }),
                (this.offset = function (t, e) {
                    t = B(t)[0];
                    var r = t.style.cssText,
                        n = o.create({ trigger: t, start: e || "top top" }),
                        s;
                    return p && (Q ? o.refresh() : ze([n], !0)), (s = n.start / A), n.kill(!1), (t.style.cssText = r), (c.core.getCache(t).uncache = 1), s;
                });
            function $() {
                return (de = d.clientHeight), (d.style.overflow = "visible"), (F.style.height = w.innerHeight + (de - w.innerHeight) / A + "px"), de - w.innerHeight;
            }
            (this.content = function (t) {
                if (arguments.length) {
                    var e = B(t || "#smooth-content")[0] || console.warn("ScrollSmoother needs a valid content element.") || F.children[0];
                    return (
                        e !== d &&
                            ((d = e),
                            (xe = d.getAttribute("style") || ""),
                            le && le.observe(d),
                            c.set(d, {
                                overflow: "visible",
                                width: "100%",
                                boxSizing: "border-box",
                                y: "+=0",
                            }),
                            k || c.set(d, { clearProps: "transform" })),
                        this
                    );
                }
                return d;
            }),
                (this.wrapper = function (t) {
                    return arguments.length
                        ? ((y = B(t || "#smooth-wrapper")[0] || et(d)),
                          (Te = y.getAttribute("style") || ""),
                          $(),
                          c.set(
                              y,
                              k
                                  ? {
                                        overflow: "hidden",
                                        position: "fixed",
                                        height: "100%",
                                        width: "100%",
                                        top: 0,
                                        left: 0,
                                        right: 0,
                                        bottom: 0,
                                    }
                                  : {
                                        overflow: "visible",
                                        position: "relative",
                                        width: "100%",
                                        height: "auto",
                                        top: "auto",
                                        bottom: "auto",
                                        left: "auto",
                                        right: "auto",
                                    }
                          ),
                          this)
                        : y;
                }),
                (this.effects = function (t, e) {
                    var r;
                    if ((p || (p = []), !t)) return p.slice(0);
                    (t = B(t)),
                        t.forEach(function (_) {
                            for (var f = p.length; f--; ) p[f].trigger === _ && p[f].kill();
                        }),
                        (e = e || {});
                    var n = e,
                        s = n.speed,
                        l = n.lag,
                        m = n.effectsPadding,
                        C = [],
                        v,
                        x;
                    for (v = 0; v < t.length; v++) (x = Je(t[v], s, l, v, m)), x && C.push(x);
                    return (r = p).push.apply(r, C), C;
                }),
                (this.sections = function (t, e) {
                    var r;
                    if ((U || (U = []), !t)) return U.slice(0);
                    var n = B(t).map(function (s) {
                        return o.create({
                            trigger: s,
                            start: "top 120%",
                            end: "bottom -20%",
                            onToggle: function (m) {
                                (s.style.opacity = m.isActive ? "1" : "0"), (s.style.pointerEvents = m.isActive ? "all" : "none");
                            },
                        });
                    });
                    return e && e.add ? (r = U).push.apply(r, n) : (U = n.slice(0)), n;
                }),
                this.content(a.content),
                this.wrapper(a.wrapper),
                (this.render = function (t) {
                    return se(t || t === 0 ? t : T);
                }),
                (this.getVelocity = function () {
                    return X.getVelocity(-T);
                }),
                o.scrollerProxy(y, {
                    scrollTop: Z,
                    scrollHeight: function () {
                        return $() && F.scrollHeight;
                    },
                    fixedMarkers: a.fixedMarkers !== !1 && !!k,
                    content: d,
                    getBoundingClientRect: function () {
                        return {
                            top: 0,
                            left: 0,
                            width: w.innerWidth,
                            height: w.innerHeight,
                        };
                    },
                }),
                o.defaults({ scroller: y });
            var Oe = o.getAll().filter(function (t) {
                return t.scroller === w || t.scroller === y;
            });
            Oe.forEach(function (t) {
                return t.revert(!0, !0);
            }),
                (g = o.create({
                    animation: c.fromTo(
                        V,
                        { y: 0 },
                        {
                            y: function () {
                                return -$();
                            },
                            immediateRender: !1,
                            ease: "none",
                            data: "ScrollSmoother",
                            duration: 100,
                            onUpdate: function () {
                                if (this._dur) {
                                    var e = me;
                                    e && (ae(g), (V.y = T)), se(V.y, e), Ce(), O && !P && O(qe);
                                }
                            },
                        }
                    ),
                    onRefreshInit: function (e) {
                        if (!h.isRefreshing) {
                            if (((h.isRefreshing = !0), p)) {
                                var r = o.getAll().filter(function (s) {
                                    return !!s.pin;
                                });
                                p.forEach(function (s) {
                                    s.vars.pinnedContainer ||
                                        r.forEach(function (l) {
                                            if (l.pin.contains(s.trigger)) {
                                                var m = s.vars;
                                                (m.pinnedContainer = l.pin), (s.vars = null), s.init(m, s.animation);
                                            }
                                        });
                                });
                            }
                            var n = e.getTween();
                            (pe = n && n._end > n._dp._time), (Ee = T), (V.y = 0), k && (o.isTouch === 1 && (y.style.position = "absolute"), (y.scrollTop = 0), o.isTouch === 1 && (y.style.position = "fixed"));
                        }
                    },
                    onRefresh: function (e) {
                        e.animation.invalidate(), e.setPositions(e.start, $() / A), pe || ae(e), (V.y = -oe() * A), se(V.y), Q || e.animation.progress(c.utils.clamp(0, 1, Ee / A / -e.end)), pe && ((e.progress -= 0.001), e.update()), (h.isRefreshing = !1);
                    },
                    id: "ScrollSmoother",
                    scroller: w,
                    invalidateOnRefresh: !0,
                    start: 0,
                    refreshPriority: -9999,
                    end: function () {
                        return $() / A;
                    },
                    onScrubComplete: function () {
                        X.reset(), W && W(u);
                    },
                    scrub: k || !0,
                })),
                (this.smooth = function (t) {
                    return arguments.length && ((k = t || 0), (A = (k && +a.speed) || 1), g.scrubDuration(t)), g.getTween() ? g.getTween().duration() : 0;
                }),
                g.getTween() && (g.getTween().vars.ease = a.ease || he),
                (this.scrollTrigger = g),
                a.effects && this.effects(a.effects === !0 ? "[data-" + ie + "speed], [data-" + ie + "lag]" : a.effects, { effectsPadding: a.effectsPadding }),
                a.sections && this.sections(a.sections === !0 ? "[data-section]" : a.sections),
                Oe.forEach(function (t) {
                    (t.vars.scroller = y), t.revert(!1, !0), t.init(t.vars, t.animation);
                }),
                (this.paused = function (t, e) {
                    return arguments.length
                        ? (!!P !== t &&
                              (t
                                  ? (g.getTween() && g.getTween().pause(),
                                    oe(-T / A),
                                    X.reset(),
                                    (J = o.normalizeScroll()),
                                    J && J.disable(),
                                    (P = o.observe({
                                        preventDefault: !0,
                                        type: "wheel,touch,scroll",
                                        debounce: !1,
                                        allowClicks: !0,
                                        onChangeY: function () {
                                            return Z(-T);
                                        },
                                    })),
                                    (P.nested = He(re, "wheel,touch,scroll", !0, e !== !1)))
                                  : (P.nested.kill(), P.kill(), (P = 0), J && J.enable(), (g.progress = (-T / A - g.start) / (g.end - g.start)), ae(g))),
                          this)
                        : !!P;
                }),
                (this.kill = this.revert =
                    function () {
                        u.paused(!1), ae(g), g.kill();
                        for (var t = (p || []).concat(U || []), e = t.length; e--; ) t[e].kill();
                        o.scrollerProxy(y), o.removeEventListener("killAll", ve), o.removeEventListener("refresh", Fe), (y.style.cssText = Te), (d.style.cssText = xe);
                        var r = o.defaults({});
                        r && r.scroller === y && o.defaults({ scroller: w }), u.normalizer && o.normalizeScroll(!1), clearInterval(we), (I = null), le && le.disconnect(), F.style.removeProperty("height"), w.removeEventListener("focusin", ke);
                    }),
                (this.refresh = function (t, e) {
                    return g.refresh(t, e);
                }),
                H && (this.normalizer = o.normalizeScroll(H === !0 ? { debounce: !0, content: !k && d } : H)),
                o.config(a),
                "overscrollBehavior" in w.getComputedStyle(F) && c.set([F, re], { overscrollBehavior: "none" }),
                "scrollBehavior" in w.getComputedStyle(F) && c.set([F, re], { scrollBehavior: "auto" }),
                w.addEventListener("focusin", ke),
                (we = setInterval(Ce, 250)),
                G.readyState === "loading" ||
                    requestAnimationFrame(function () {
                        return o.refresh();
                    });
        }
        return (
            (h.register = function (u) {
                return (
                    fe ||
                        ((c = u || je()),
                        Ye() && window.document && ((w = window), (G = document), (re = G.documentElement), (F = G.body)),
                        c &&
                            ((B = c.utils.toArray),
                            (Be = c.utils.clamp),
                            (he = c.parseEase("expo")),
                            (Le = c.core.context || function () {}),
                            (o = c.core.globals().ScrollTrigger),
                            c.core.globals("ScrollSmoother", h),
                            F &&
                                o &&
                                ((Ue = c
                                    .delayedCall(0.2, function () {
                                        return o.isRefreshing || (I && I.refresh());
                                    })
                                    .pause()),
                                (De = o.core._getVelocityProp),
                                (He = o.core._inputObserver),
                                (h.refresh = o.refresh),
                                (fe = 1)))),
                    fe
                );
            }),
            Xe(h, [
                {
                    key: "progress",
                    get: function () {
                        return this.scrollTrigger ? this.scrollTrigger.animation._time / 100 : 0;
                    },
                },
            ]),
            h
        );
    })();
ne.version = "3.12.2";
ne.create = function (h) {
    return I && h && I.content() === B(h.content)[0] ? I : new ne(h);
};
ne.get = function () {
    return I;
};
je() && c.registerPlugin(ne);
